https://github.com/hnjaman/complete-microservice-application
https://medium.com/backend-habit/intellij-idea-running-multiple-project-microservices-in-one-workspace-d61126fe0eef

https://github.com/javagrails/road-to-microservice-what-why-when-how
https://www.rabbitmq.com/install-debian.html

https://github.com/Netflix/zuul
https://github.com/Netflix/zuul/wiki

===========================================
01. ms-ui (A Separate Angular Application)
02. ms-console (A Service Registry/Discovery/Eureka/Ribbon/Load Balancer/Request Router application)
03. blood-bank-api-gateway (An Api gateway where all microservices will be connected)
04. ms-one-bank-a (A bank of A group blood)
05. ms-two-bank-b (A bank of B group blood)
06. ms-three-bank-ab (A bank of AB group blood)
07. ms-four-bank-o (A bank of O group blood)
08. Docker will use in different microservices (Database/RabbitMQ/any other purpose)
09. Documentation
10. Deployment (LocalHost)



git clone git@github.com-javagrails:javagrails/concepts.git

git clone git@github.com-javagrails:javagrails/road-to-microservice-what-why-when-how.git

jdbc:h2:file:~/msdbase/ms-one-bank-a

=========================================================================================================
=========================================================================================================
=========================================================================================================
=========================================================================================================
=========================================================================================================
=========================================================================================================
=========================================================================================================
=04==================================== ms-two-bank-b ===================================================

=03==================================== ms-one-bank-a ===================================================
This a microservice just a spring boot web rest api application

=02==================================== ms-console ======================================================
Here [ms-console] is the application where all other microservices [ms-one-bank-a] get register with
a service id like [spring.application.name:ms-one-bank-a] and this achieve by Eureka server and client
library and it runs on [http://localhost:8761] like image [zdocs/eureka.png]

=01=================================== RabbitMQ Installation ==============================================
https://packagecloud.io/rabbitmq/rabbitmq-server/install#bash-deb

https://askubuntu.com/questions/1188699/rabbitmq-packages-have-unmet-dependencies

curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | sudo bash
echo "deb http://www.rabbitmq.com/debian/ testing main"  | sudo tee  /etc/apt/sources.list.d/rabbitmq.list > /dev/null
sudo rm /etc/apt/sources.list.d/rabbitmq.list
wget https://www.rabbitmq.com/rabbitmq-signing-key-public.asc


curl -fsSL https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | sudo apt-key add -
sudo apt-get install apt-transport-https
echo "deb http://dl.bintray.com/rabbitmq-erlang/debian xenial erlang-22.x"  | sudo tee  /etc/apt/sources.list.d/bintray.erlang.list > /dev/null
sudo apt-get update -y
sudo apt-get install -y erlang-base \
                    erlang-asn1 erlang-crypto erlang-eldap erlang-ftp erlang-inets \
                    erlang-mnesia erlang-os-mon erlang-parsetools erlang-public-key \
                    erlang-runtime-tools erlang-snmp erlang-ssl \
                    erlang-syntax-tools erlang-tftp erlang-tools erlang-xmerl



sudo apt-get install curl gnupg -y
curl -fsSL https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | sudo apt-key add -
echo "deb https://dl.bintray.com/rabbitmq/debian xenial main" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list
sudo apt-get update -y
sudo apt-get install -y rabbitmq-server

whereis rabbitmq-server
rabbitmq-server: /usr/sbin/rabbitmq-server /usr/share/man/man8/rabbitmq-server.8.gz
whereis rabbitmq
rabbitmq: /usr/lib/rabbitmq /etc/rabbitmq

sudo service rabbitmq-server start
sudo service rabbitmq-server status
sudo service rabbitmq-server stop

================================= Rabbitmq Management ===============================
https://www.youtube.com/watch?v=2SE9w1XfevA
https://www.youtube.com/watch?v=F4PvutsQJlc

https://stackoverflow.com/questions/5250664/whats-the-best-way-to-monitor-rabbitmq-to-make-sure-everything-is-running-smoot/29343546

sudo rabbitmq-plugins enable rabbitmq_management
Enabling plugins on node rabbit@salmanpc:
sudo service rabbitmq-server restart
user/pass :: guest/guest
http://rabbitmq-server-ip:15672
http://localhost:15672

http://localhost:15672/api/overview

sudo rabbitmqctl status






=========================================================================================================
https://github.com/integrations/slack
